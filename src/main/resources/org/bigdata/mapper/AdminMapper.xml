<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="org.bigdata.mapper.AdminMapper">
    
    <!-- 상의 등록  -->
    <insert id="productCoat" >
    
    	<selectKey resultType="int" keyProperty="coatNumber" order="AFTER">
    	
    		select SEQ_COATKEY.currval from dual
    		
    	</selectKey>

    	
    	
    	insert into shopping_coat(coatNumber,coatKey,coatName,coatPrice,coatStock,coatDiscount,coatContents,regDate)
    				values(seq_coatkey.nextval,#{coatKey},#{coatName},#{coatPrice},#{coatStock},#{coatDiscount},#{coatContents},sysdate)
    </insert>
    
    <!--  이미지 등록 -->
    <insert id="productCoatImage">
        
    	insert into shopping_Image(coatNumber,fileName,uploadPath,uuid)
    		values(#{coatNumber},#{fileName},#{uploadPath},#{uuid})
    </insert>
    
    <!-- 지정 상의 이미지 전체 삭제 -->
    <delete id="deleteImageAll">
    	delete from shopping_image where coatNumber = #{coatNumber}
    </delete>
    
    <!-- 지정 상의 이미지 정보 얻기 -->
    <select id="getAttachInfo" resultType="org.bigdata.domain.AttachImageVO">
    	select * from shopping_image where coatNumber = #{coatNumber}
    </select>
 
 	<!-- 상의 상품 상세보기 -->
 	<select id="productCoatGetDetail" resultType="org.bigdata.domain.CoatVO">
 		select * from shopping_coat where coatNumber = #{coatNumber}
 	</select>
 	
 	<!--상의 상품 수정하기  -->
 	<update id="productCoatUpdate">
 	
 		update shopping_coat set 
 					coatKey = #{coatKey},
 					coatName = #{coatName},
 					coatPrice = #{coatPrice},
 					coatStock = #{coatStock},
 					coatDiscount = #{coatDiscount},
 					coatContents = #{coatContents},
 					updateDate = sysdate
 			where coatNumber = ${coatNumber}
 	</update>
 	
 	<!-- 상의 상품 삭제하기  -->
 	<delete id="productCoatDelete">
 		delete from shopping_coat where coatNumber = #{coatNumber}
 	</delete>
 
    <!--페이징 처리 적용 상의 리스트 -->
    <select id="productCoatGetList"
			resultType="org.bigdata.domain.CoatVO">
		<![CDATA[
			select coatNumber,coatKey,coatName,coatPrice,coatStock,coatDiscount,coatContents,regdate,updatedate
			  from (select /*+ INDEX_DESC(shopping_coat pk_coat) */
			               rownum rn,coatNumber,coatKey,coatName,coatPrice,coatStock,coatDiscount,coatContents,regdate,updatedate
			     from shopping_coat
			     where 
			
		]]> 
		 		<if test="keyword != null">
	      			 coatName like '%' || #{keyword} || '%' and
	      		</if>
	      
	    <![CDATA[	
	   			 rownum <= #{pageNum} * #{amount}
			     )
			 where rn > (#{pageNum} -1) * #{amount}
	               
		]]>
	</select>
  
  
  
	<!-- 상의 총 개수 -->
	<select id="productCoatGetTotal" resultType="int">
		select count(*) 
	      from shopping_coat
	      
	      <if test="keyword != null">
	      	where coatName like '%' || #{keyword} || '%'
	      </if>
	</select>
	   
    
    
    
    
    
    
    
    
    <!-- 하의 등록 -->
    <insert id="productPants">
    	insert into shopping_pants(pantsNumber,pantsKey,pantsName,pantsPrice,pantsStock,pantsDiscount,pantsContents,regDate)
    				values(seq_pantskey.nextval,#{pantsKey},#{pantsName},#{pantsPrice},#{pantsStock},#{pantsDiscount},#{pantsContents},sysdate)
    </insert>
    
    
 
 	<!-- 하의 상품 상세보기 -->
 	<select id="productPantsGetDetail" resultType="org.bigdata.domain.PantsVO">
 		select * from shopping_pants where pantsNumber = #{pantsNumber}
 	</select>
 	
 	<!--하의 상품 수정하기  -->
 	<update id="productPantsUpdate">
 	
 		update shopping_pants set 
 					pantsKey = #{pantsKey},
 					pantsName = #{pantsName},
 					pantsPrice = #{pantsPrice},
 					pantsStock = #{pantsStock},
 					pantsDiscount = #{pantsDiscount},
 					pantsContents = #{pantsContents},
 					updateDate = sysdate
 			where pantsNumber = ${pantsNumber}
 	</update>
 	
 	<!-- 하의 상품 삭제하기  -->
 	<delete id="productPantsDelete">
 		delete from shopping_pants where pantsNumber = #{pantsNumber}
 	</delete>
 
    <!--페이징 처리 적용 하의 리스트 -->
    <select id="productPantsGetList"
			resultType="org.bigdata.domain.PantsVO">
		<![CDATA[
			select pantsNumber,pantsKey,pantsName,pantsPrice,pantsStock,pantsDiscount,pantsContents,regdate,updatedate
			  from (select /*+ INDEX_DESC(shopping_pants pk_pants) */
			               rownum rn,pantsNumber,pantsKey,pantsName,pantsPrice,pantsStock,pantsDiscount,pantsContents,regdate,updatedate
			     from shopping_pants
			     where 
			
		]]> 
		 		<if test="keyword != null">
	      			 pantsName like '%' || #{keyword} || '%' and
	      		</if>
	      
	    <![CDATA[	
	   			 rownum <= #{pageNum} * #{amount}
			     )
			 where rn > (#{pageNum} -1) * #{amount}
	               
		]]>
	</select>
  
  
	<!-- 하의 총 개수 -->
	<select id="productPantsGetTotal" resultType="int">
		select count(*) 
	      from shopping_pants
	      
	      <if test="keyword != null">
	      	where pantsName like '%' || #{keyword} || '%'
	      </if>
	</select>
	     
    
    
    
    
    
    
    
    

    
    
    
    <!-- 신발 등록 -->
    <insert id="productShoes">
    	insert into shopping_shoes(shoesNumber,shoesKey,shoesName,shoesPrice,shoesStock,shoesDiscount,shoesContents,regDate)
    				values(seq_shoesKey.nextval,#{shoesKey},#{shoesName},#{shoesPrice},#{shoesStock},#{shoesDiscount},#{shoesContents},sysdate)
    </insert>
    
<!--       신발 이미지 등록
    <insert id="productShoesImage">
    	insert into shopping_shoesImage(shoesNumber,fileName,uploadPath,uuid)
    		values(#{shoesNumber},#{fileName},#{uploadPath},#{uuid})
    </insert> -->
 
 	<!-- 신발 상품 상세보기 -->
 	<select id="productShoesGetDetail" resultType="org.bigdata.domain.ShoesVO">
 		select * from shopping_shoes where shoesNumber = #{shoesNumber}
 	</select>
 	
 	<!--신발 상품 수정하기  -->
 	<update id="productShoesUpdate">
 	
 		update shopping_shoes set 
 					shoesKey = #{shoesKey},
 					shoesName = #{shoesName},
 					shoesPrice = #{shoesPrice},
 					shoesStock = #{shoesStock},
 					shoesDiscount = #{shoesDiscount},
 					shoesContents = #{shoesContents},
 					updateDate = sysdate
 			where shoesNumber = ${shoesNumber}
 	</update>
 	
 	<!-- 신발 상품 삭제하기  -->
 	<delete id="productShoesDelete">
 		delete from shopping_shoes where shoesNumber = #{shoesNumber}
 	</delete>
 
    <!--페이징 처리 적용 신발 리스트 -->
    <select id="productShoesGetList"
			resultType="org.bigdata.domain.ShoesVO">
		<![CDATA[
			select shoesNumber,shoesKey,shoesName,shoesPrice,shoesStock,shoesDiscount,shoesContents,regdate,updatedate
			  from (select /*+ INDEX_DESC(shopping_shoes pk_shoes) */
			               rownum rn,shoesNumber,shoesKey,shoesName,shoesPrice,shoesStock,shoesDiscount,shoesContents,regdate,updatedate
			     from shopping_shoes
			     where 
			
		]]> 
		 		<if test="keyword != null">
	      			 shoesName like '%' || #{keyword} || '%' and
	      		</if>
	      
	    <![CDATA[	
	   			 rownum <= #{pageNum} * #{amount}
			     )
			 where rn > (#{pageNum} -1) * #{amount}
	               
		]]>
	</select>
  
  
	<!-- 신발 총 개수 -->
	<select id="productShoesGetTotal" resultType="int">
		select count(*) 
	      from shopping_shoes
	      
	      <if test="keyword != null">
	      	where shoesName like '%' || #{keyword} || '%'
	      </if>
	</select>    
    
    
    
    
	<!-- 어제자 날자 이미지 리스트 -->
	<select id="checkFileList" resultType="org.bigdata.domain.AttachImageVO">
	
		select * from shopping_image where uploadpath = to_char(sysdate -1, 'yyyy\mm\dd')	
	
	</select>    
    						  
    
    </mapper>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    